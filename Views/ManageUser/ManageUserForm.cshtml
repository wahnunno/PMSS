@model ManageUserListClass
@{
    ViewData["Title"] = "ManageUserForm";
}

@if (TempData["Success"] != null)
{
    <script type="text/javascript">
        Swal.fire('Action Completed', 'Data is already saved.', 'success');
        @*document.getElementById("ManageUnitDepartmentForm").reset();*@
    </script>
}
@if (TempData["Error"] != null)
{
    <script type="text/javascript">
        Swal.fire('Error, Checking Alert', '@TempData["Error"]', 'error');
        @*document.getElementById("ManageUnitDepartmentForm").reset();*@
    </script>
}

<div class="container p-0">
    <div class="row">
        @*Form*@
        <div class="col-4">
            <div class="card card-custom">
                <div class="card-header card-custom-header" style="background-color: #d9edf7;">เพิ่มผู้ใช้งาน</div>
                <div class="card-body card-custom-body">
                    <form id="ManageUserForm" method="post" onsubmit="return false;" class="needs-validation" novalidate>
                        <div class="form-group">
                            <div class="form-group row">
                                <div class="col-md-12 col-sm-12 col-12">
                                    <div class="form-group row pb-3">
                                        <label class="col-lg-4 col-md-6 col-sm-12 col-12">
                                            OA User&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-8 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation">
                                                    <input asp-for="OAUserID"
                                                           id="txtOAUserID"
                                                           class="form-control"
                                                           maxlength="10"
                                                           placeholder="OA User"
                                                           required />
                                                    <div class="invalid-feedback">
                                                        Please require field OA User.
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row pb-3">
                                        <label class="col-lg-4 col-md-12 col-sm-12 col-12">
                                            Name Eng.&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-8 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation">
                                                    <input asp-for="Name"
                                                           id="txtName"
                                                           class="form-control"
                                                           maxlength="50"
                                                           placeholder="Name Eng"
                                                           required />
                                                    <div class="invalid-feedback">
                                                        Please require field Name Eng.
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row pb-3">
                                        <label class="col-md-4 col-sm-12 col-12">
                                            วันที่มีผล&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-8 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation date p-0" id="txtStartDate">
                                                    <input type="text"
                                                           class="form-control"
                                                           placeholder="dd/mm/yyyy"
                                                           onchange="OnChangeDate('StartDate')"
                                                           required>
                                                    <span class="input-group-append">
                                                        <span class="input-group-text">
                                                            <i class="bi bi-calendar3"></i>
                                                        </span>
                                                    </span>
                                                    <div class="invalid-feedback">
                                                        Please require field วันที่มีผล.
                                                    </div>
                                                </div>
                                                <input hidden
                                                       type="text"
                                                       class="form-control"
                                                       asp-for="sStartDate"
                                                       id="sStartDate">
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row pb-3">
                                        <label class="col-md-4 col-sm-12 col-12">
                                            วันที่สิ้นสุด&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-8 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation date p-0" id="txtEndDate">
                                                    <input type="text"
                                                           class="form-control"
                                                           placeholder="dd/mm/yyyy"
                                                           onchange="OnChangeDate('EndDate')"
                                                           required>
                                                    <span class="input-group-append">
                                                        <span class="input-group-text">
                                                            <i class="bi bi-calendar3"></i>
                                                        </span>
                                                    </span>
                                                    <div class="invalid-feedback">
                                                        Please require field วันที่สิ้นสุด.
                                                    </div>
                                                </div>
                                                <input hidden
                                                       type="text"
                                                       class="form-control"
                                                       asp-for="sEndDate"
                                                       id="sEndDate">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center pb-1">
                            <input hidden type="checkbox" id="cbEdit" asp-for="IsEdit">
                            <button type="submit" id="btnSubmit" name="btnSubmit" class="btn btn-success" onclick="OnClick('Submit',0,this.form)"><i class="bi bi-box-arrow-down"></i>&nbsp;Submit</button>
                            <button type="reset" id="btnClear" name="btnClear" class="btn btn-secondary" onclick="Clear()"><i class="bi bi-arrow-clockwise"></i>&nbsp;Clear</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        @*Table*@
        <div class="col-8">
            <div class="form-group">
                <div class="table-responsive">
                    <table id="tbData" class="table table-sm table-bordered table-striped bg-white table-break SSCPro">
                        <thead style="color: white; background-color: #17679c;">
                            <tr>
                                <th style="text-align:center">No.</th>
                                <th style="text-align:center">OA User</th>
                                <th style="text-align:center">Name</th>
                                <th style="text-align:center">วันที่มีผล</th>
                                <th style="text-align:center">วันที่สิ้นสุด</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (@Model.lstData != null)
                            {
                                @if (@Model.lstData.Count != 0)
                                {
                                    @foreach (var item in @Model.lstData)
                                    {
                                        <tr>
                                            <td style="text-align:center">@item.nNo</td>
                                            <td style="text-align:center">@item.OAUserID</td>
                                            <td>@item.Name</td>
                                            <td style="text-align:center">@item.sStartDate</td>
                                            <td style="text-align:center">@item.sEndDate</td>
                                            <td style="text-align:center">
                                                <button id="btnEdit" name="btnEdit" class="btn btn-sm btn-warning" onclick="OnEdit(@item.nID,'@item.OAUserID','@item.Name','@item.sStartDate','@item.sEndDate');"><i class="bi bi-pencil-square"></i>&nbsp;Edit</button>
                                                <button id="btnDelete" name="btnDelete" class="btn btn-sm btn-danger" onclick="OnClick('Delete','@item.OAUserID')"><i class="bi bi-trash"></i>&nbsp;Delete</button>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                            @if (@Model.lstData == null || @Model.lstData.Count == 0)
                            {
                                <tr>
                                    <td style="text-align:center" class="dataNotFound" colspan="6">
                                        No Data.
                                    </td>
                                </tr>
                            }
                        </tbody>
                        @if (@Model.PagerCount > 1)
                        {
                            <tfoot>
                                <tr>
                                    <td colspan="6" align="center">
                                        @if (@Model.PageNumber > 1)
                                        {
                                            <a asp-controller="ManageUser" asp-action="ManageUserForm" asp-route-pageNumber="1">First</a>
                                            <a asp-controller="ManageUser" asp-action="ManageUserForm" asp-route-pageNumber="@Model.PagePrevious">Previous</a>
                                        }
                                        @for (int pagenum = 1; pagenum <= @Model.PagerCount; pagenum++)
                                        {
                                            <a asp-controller="ManageUser" asp-action="ManageUserForm" asp-route-pageNumber="@pagenum">@pagenum</a>
                                        }
                                        @if (@Model.PageNumber != @Model.PagerCount)
                                        {
                                            <a asp-controller="ManageUser" asp-action="ManageUserForm" asp-route-pageNumber="@Model.PageNext">Next</a>
                                            <a asp-controller="ManageUser" asp-action="ManageUserForm" asp-route-pageNumber="@Model.PagerCount">Last</a>
                                        }
                                    </td>
                                </tr>
                            </tfoot>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    ////Function Get Data
    //function GetData(){
    //    let Obj = {
    //        pageNumber : 0,
    //    }
    //    $.post( 'https://localhost:44396/ManageUser/ManageUserForm', Obj ).done(
    //        function(res) {
    //            console.log("GetData",res);
    //            //if (res.status == "Success") {
    //            //    Swal.fire('Action Completed', 'Data is already deleteds.', 'success');
    //            //} else {
    //            //    Swal.fire('Error, Checking Alert', res.massage, 'error');
    //            //}
    //        }
    //    );
    //}

    //Set Control DatePicker : StartDate
    $(function(){
        $('#txtStartDate').datepicker({
            format: "dd/mm/yyyy",
            todaybtn: "linked",
            orientation: "bottom auto",
            todayhighlight: true,
            autoclose: true,
        });
    });

    //Set Control DatePicker : EndDate
    $(function(){
        $('#txtEndDate').datepicker({
            format: "dd/mm/yyyy",
            todaybtn: "linked",
            orientation: "bottom auto",
            todayhighlight: true,
            autoclose: true,
        });
    });

    //Function OnClick case
    function OnClick(Mode,sID,form)
    {
        switch(Mode)
        {
            case "Submit":
                var txtOAUserID = document.getElementById("txtOAUserID").value;
                var txtName = document.getElementById("txtName").value;
                var txtStartDate = document.getElementById("sStartDate").value;
                var txtEndDate = document.getElementById("sEndDate").value;
                if(txtOAUserID && txtName && txtStartDate && txtEndDate)
                {
                    Swal.fire({
                        title: 'Confirmation',
                        text: 'Do you want to submit data?',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '<i class="bi bi-check"></i> Yes',
                        cancelButtonText: '<i class="bi bi-x"></i> No',
                        showLoaderOnConfirm: true,
                        allowOutsideClick: false,
                        timerProgressBar: true,
                        preConfirm: function () {
                            return new Promise(function (resolve, reject) {
                                Swal.disableButtons();
                                //OnSave();
                                form.submit();
                                Swal.close();
                            });
                        },
                    }).then(function (d) {
                        if (d.dismiss === Swal.DismissReason.cancel) {
                            Swal.close();
                        }
                    });
                }
                break;
            case "Delete":
                    Swal.fire({
                        title: 'Confirmation',
                        text: 'Do you want to delete data?',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '<i class="bi bi-check"></i> Yes',
                        cancelButtonText: '<i class="bi bi-x"></i> No',
                        showLoaderOnConfirm: true,
                        allowOutsideClick: false,
                        timerProgressBar: true,
                        preConfirm: function () {
                            return new Promise(function (resolve, reject) {
                                Swal.disableButtons();
                                OnDelete(sID);
                                Swal.close();
                            });
                        },
                    }).then(function (d) {
                        if (d.dismiss === Swal.DismissReason.cancel) {
                            Swal.close();
                        }
                    });
                break;
        }
    }

    //Function Edit Data
    function OnEdit(ID,sOAUserID,sName,sStartDate,sEndDate)
    {
        document.getElementById("txtOAUserID").readOnly = true;
        document.getElementById("txtOAUserID").value = sOAUserID;
        document.getElementById("txtName").value = sName;

        //Start Date
        let ArrStartDate = sStartDate.split('/');
        let strStartDate = ArrStartDate[1] + '/' + ArrStartDate[0] + '/' + ArrStartDate[2];
        let dStartDate = new Date(strStartDate);
        $('#txtStartDate').datepicker('setDate', dStartDate);
        OnChangeDate('StartDate');

        //End Date
        let ArrEndDate = sEndDate.split('/');
        let strEndDate = ArrEndDate[1] + '/' + ArrEndDate[0] + '/' + ArrEndDate[2];
        let dEndDate = new Date(strEndDate);
        $('#txtEndDate').datepicker('setDate', dEndDate);
        OnChangeDate('EndDate');

        $("#cbEdit").prop('checked', true);
    }

    //Function Delete Data
    function OnDelete(sID)
    {
        let Obj = {
            sID : sID,
        }
        $.post( 'https://localhost:44396/ManageUser/Delete', Obj ).done(
            function(res) {
                if (res.status == "Success") {
                    Swal.fire('Action Completed', 'Data is already deleted.', 'success');
                } else {
                    Swal.fire('Error, Checking Alert', res.massage, 'error');
                }
            }
        );
    }

    //Function Validation
    (function () {
      'use strict'

      var forms = document.querySelectorAll('.needs-validation')

      Array.prototype.slice.call(forms)
        .forEach(function (form) {
          form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
              event.preventDefault()
              event.stopPropagation()
            }

            form.classList.add('was-validated')
          }, false)
        })
    })()

    //Function Clear Form
    function Clear()
    {
        $("#txtOAUserID").prop("disabled", false);
        document.getElementById("txtOAUserID").value = null;
        document.getElementById("txtName").value = null;
        $('#txtStartDate').datepicker('setDate', null);
        $('#txtEndDate').datepicker('setDate', null);
        $("#cbEdit").prop('checked', false);
        document.getElementById("sStartDate").value = null;
        document.getElementById("sStartDate").value = null;
    }

    function OnChangeDate(Mode)
    {
        if(Mode == "StartDate"){
            var txtStartDate = $('#txtStartDate').datepicker('getDate');
            if(txtStartDate){
                const yyyy = txtStartDate.getFullYear();
                let mm = txtStartDate.getMonth() + 1; // Months start at 0!
                let dd = txtStartDate.getDate();

                if (dd < 10) dd = '0' + dd;
                if (mm < 10) mm = '0' + mm;

                var strStartDate = dd + '/' + mm + '/' + yyyy;
                if(strStartDate){
                    document.getElementById("sStartDate").value = strStartDate;
                }
            }
        }

        if(Mode == "EndDate"){
            var txtEndDate = $('#txtEndDate').datepicker('getDate');
            if(txtEndDate){
                let yyyy = txtEndDate.getFullYear();
                let mm = txtEndDate.getMonth() + 1; // Months start at 0!
                let dd = txtEndDate.getDate();

                if (dd < 10) dd = '0' + dd;
                if (mm < 10) mm = '0' + mm;

                var strEndDate = dd + '/' + mm + '/' + yyyy;
                if(strEndDate){
                    document.getElementById("sEndDate").value = strEndDate;
                }
            }
        }
    }
</script>
