@model ManageUnitDepartmentListClass
@{
    ViewData["Title"] = "ManageUnitDepartmentForm";
}

<div class="container p-0">
    <div class="row">
        @*Form*@
        <div class="col-4">
            <div class="card card-custom">
                <div class="card-header card-custom-header" style="background-color: #d9edf7;">เพิ่มสาขา/หน่วยงาน</div>
                <div class="card-body card-custom-body">
                    <form id="UserForm" class="needs-validation" novalidate>
                        <div class="form-group">
                            <div class="form-group row">
                                <div class="col-md-12 col-sm-12 col-12">
                                    <div class="form-group row pb-3">
                                        <label class="col-lg-5 col-md-6 col-sm-12 col-12">
                                            Division Code&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-7 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation">
                                                    <input asp-for="SectionCode"
                                                           id="txtSectionCode"
                                                           name="txtSectionCode"
                                                           class="form-control"
                                                           maxlength="5"
                                                           placeholder="Division Code"
                                                           required />
                                                    <div class="invalid-feedback">
                                                        Please require field Division Code.
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row pb-3">
                                        <label class="col-lg-5 col-md-12 col-sm-12 col-12">
                                            Division Name&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-7 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation">
                                                    <input asp-for="SectionName"
                                                           id="txtSectionName"
                                                           name="txtSectionName"
                                                           class="form-control"
                                                           maxlength="100"
                                                           placeholder="Division Name"
                                                           required />
                                                    <div class="invalid-feedback">
                                                        Please require field Division Name.
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="form-group row pb-3">
                                        <label class="col-md-5 col-sm-12 col-12">
                                            Group Section&nbsp;<span class="text-danger">*</span>
                                        </label>
                                        <div class="col-md-7 col-sm-12 col-12">
                                            <div class="form-group">
                                                <div class="input-group has-validation">
                                                    <select class="form-control form-select" id="ddlGroupSection" name="ddlGroupSection">
                                                        <option selected>- Select -</option>
                                                        @if (@Model.lstGroupSection.Count > 0)
                                                        {
                                                            @foreach (var Item in @Model.lstGroupSection)
                                                            {
                                                                <option value=@Item.value>@Item.label</option>
                                                            }
                                                        }
                                                    </select>
                                                    <div class="invalid-feedback">
                                                        Please require field Group Section.
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="text-center">
                            <button type="submit" id="btnSubmit" name="btnSubmit" class="btn btn-success" onclick="OnClick('Submit')"><i class="bi bi-box-arrow-down"></i>&nbsp;Submit</button>
                        </div>
                    </form>
                    @*
                        <div class="text-center">
                        <button type="submit" id="btnSubmit" name="btnSubmit" class="btn btn-success" onclick="OnClick('Submit')"><i class="bi bi-box-arrow-down"></i>&nbsp;Submit</button>
                        </div>
                    *@
                </div>
            </div>
        </div>
        @*Table*@
        <div class="col-8">
            <div class="form-group">
                <div class="table-responsive">
                    <table id="tbData" class="table table-sm table-bordered table-striped bg-white table-break SSCPro">
                        <thead style="color: white; background-color: #17679c;">
                            <tr>
                                <th style="text-align:center">No.</th>
                                <th style="text-align:center">Divition Code</th>
                                <th style="text-align:center">Divition Name</th>
                                <th style="text-align:center">Group Section</th>
                                <th style="text-align:center">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (@Model.lstData != null)
                            {
                                @if (@Model.lstData.Count != 0)
                                {
                                    @foreach (var item in @Model.lstData)
                                    {
                                        <tr>
                                            <td style="text-align:center">@item.nNo</td>
                                            <td style="text-align:center">@item.SectionCode</td>
                                            <td>@item.SectionName</td>
                                            <td style="text-align:center">@item.SectionGroupName</td>
                                            <td style="text-align:center">
                                                <button id="btnEdit" name="btnEdit" class="btn btn-sm btn-warning" onclick="OnEdit('@item.SectionCode','@item.SectionName','@item.SectionGroup');"><i class="bi bi-pencil-square"></i>&nbsp;Edit</button>
                                                <button id="btnDelete" name="btnDelete" class="btn btn-sm btn-danger" onclick="OnClick('Delete','@item.SectionCode')"><i class="bi bi-trash"></i>&nbsp;Delete</button>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                            @if (@Model.lstData == null || @Model.lstData.Count == 0)
                            {
                                <tr>
                                    <td style="text-align:center" class="dataNotFound" colspan="6">
                                        No Data.
                                    </td>
                                </tr>
                            }
                        </tbody>
                        @if (@Model.PagerCount > 1)
                        {
                            <tfoot>
                                <tr>
                                    <td colspan="6" align="center">
                                        @if (@Model.PageNumber > 1)
                                        {
                                            <a asp-controller="ManageUnitDepartment" asp-action="ManageUnitDepartmentForm" asp-route-pageNumber="1">First</a>
                                            <a asp-controller="ManageUnitDepartment" asp-action="ManageUnitDepartmentForm" asp-route-pageNumber="@Model.PagePrevious">Previous</a>
                                        }
                                        @for (int pagenum = 1; pagenum <= @Model.PagerCount; pagenum++)
                                        {
                                            <a asp-controller="ManageUnitDepartment" asp-action="ManageUnitDepartmentForm" asp-route-pageNumber="@pagenum">@pagenum</a>
                                        }
                                        @if (@Model.PageNumber != @Model.PagerCount)
                                        {
                                            <a asp-controller="ManageUnitDepartment" asp-action="ManageUnitDepartmentForm" asp-route-pageNumber="@Model.PageNext">Next</a>
                                            <a asp-controller="ManageUnitDepartment" asp-action="ManageUnitDepartmentForm" asp-route-pageNumber="@Model.PagerCount">Last</a>
                                        }
                                    </td>
                                </tr>
                            </tfoot>
                        }
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    var nID = 0;

    //Function Get Data
    function GetData(){
        let Obj = {
            pageNumber : 0,
        }
        $.post( 'https://localhost:44396/ManageUnitDepartment/ManageUnitDepartmentForm', Obj ).done(
            function(res) {
                console.log("GetData",res);
                //if (res.status == "Success") {
                //    Swal.fire('Action Completed', 'Data is already deleteds.', 'success');
                //} else {
                //    Swal.fire('Error, Checking Alert', res.massage, 'error');
                //}
            }
        );
    }

    //Set Control DatePicker : StartDate
    $(function(){
        $('#txtStartDate').datepicker({
            format: "dd/mm/yyyy",
            todaybtn: "linked",
            orientation: "bottom auto",
            todayhighlight: true,
            autoclose: true,
        });
    });

    //Set Control DatePicker : EndDate
    $(function(){
        $('#txtEndDate').datepicker({
            format: "dd/mm/yyyy",
            todaybtn: "linked",
            orientation: "bottom auto",
            todayhighlight: true,
            autoclose: true,
        });
    });

    function OnClick(Mode,nID = 0)
    {
        this.nID = nID;
        switch(Mode)
        {
            case "Submit":
                var txtOAUserID = document.getElementById("txtOAUserID").value;
                var txtName = document.getElementById("txtName").value;
                var txtStartDate = document.getElementById("txtStartDate").value;
                var txtEndDate = document.getElementById("txtEndDate").value;
                console.log("txtOAUserID",txtOAUserID);
                console.log("txtName",txtName);
                console.log("txtStartDate",txtStartDate);
                console.log("txtEndDate",txtEndDate);
                if(txtOAUserID && txtName && txtStartDate && txtEndDate)
                {
                    Swal.fire({
                        title: 'Confirmation',
                        text: 'Do you want to submit data?',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '<i class="bi bi-check"></i> Yes',
                        cancelButtonText: '<i class="bi bi-x"></i> No',
                        showLoaderOnConfirm: true,
                        allowOutsideClick: false,
                        timerProgressBar: true,
                        preConfirm: function () {
                            return new Promise(function (resolve, reject) {
                                Swal.disableButtons();
                                OnSave();
                                Swal.close();
                            });
                        },
                    }).then(function (d) {
                        if (d.dismiss === Swal.DismissReason.cancel) {
                            Swal.close();
                        }
                    });
                }
                break;
            case "Delete":
                    Swal.fire({
                        title: 'Confirmation',
                        text: 'Do you want to delete data?',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '<i class="bi bi-check"></i> Yes',
                        cancelButtonText: '<i class="bi bi-x"></i> No',
                        showLoaderOnConfirm: true,
                        allowOutsideClick: false,
                        timerProgressBar: true,
                        preConfirm: function () {
                            return new Promise(function (resolve, reject) {
                                Swal.disableButtons();
                                OnDelete();
                                Swal.close();
                            });
                        },
                    }).then(function (d) {
                        if (d.dismiss === Swal.DismissReason.cancel) {
                            Swal.close();
                        }
                    });
                break;
        }
    }

    //Function Save Data
    function OnSave()
    {
        console.log("OnSave",nID)
        let Obj = {
            nNo : 0,
            nID : nID,
            sOAUserID : document.getElementById("txtOAUserID").value,
            sRole : null,
            sName : document.getElementById("txtName").value,
            sDep : null,
            sEmail : null,
            sTel : null,
            dStartDate : null,
            dEndDate : null,
            sCreate : null,
            dCreateDate : null,
            sUpdate : null,
            dUpdateDate : null,
            IsDelete : false,
            sStartDate : document.getElementById("txtStartDate").value,
            sEndDate : document.getElementById("txtEndDate").value,
        }
        //console.log("OnSave",Obj);
        $.post('https://localhost:44396/ManageUnitDepartment/SaveToDB', Obj ).done(
            function(res) {
                if (res.status == "Success") {
                    Swal.fire('Action Completed', 'Data is already saved.', 'success');
                    GetData();

                    //Set Value
                    document.getElementById("txtOAUserID").value = null;
                    document.getElementById("txtName").value = null;
                    $('#txtStartDate').datepicker('setDate', null);
                    $('#txtEndDate').datepicker('setDate', null);
                } else {
                    Swal.fire('Error, Checking Alert', res.massage, 'error');
                }
            }
        );
    }

    //Function Edit Data
    function OnEdit(SectionCode,SectionName,SectionGroup)
    {
        let Value_SectionName = SectionName.trimEnd();
        let Value_SectionGroup = SectionGroup.trimEnd();
        $("#txtSectionCode").prop("disabled", true);
        document.getElementById("txtSectionCode").value = SectionCode;
        document.getElementById("txtSectionName").value = Value_SectionName;
        document.getElementById("ddlGroupSection").value = Value_SectionGroup;
    }

    //Function Delete Data
    function OnDelete(){
        let Obj = {
            nID : this.nID,
        }
        $.post( 'https://localhost:44396/ManageUnitDepartment/Delete', Obj ).done(
            function(res) {
                if (res.status == "Success") {
                    Swal.fire('Action Completed', 'Data is already deleteds.', 'success');
                    GetData();
                } else {
                    Swal.fire('Error, Checking Alert', res.massage, 'error');
                }
            }
        );
    }

    (function () {
      'use strict'

      var forms = document.querySelectorAll('.needs-validation')

      Array.prototype.slice.call(forms)
        .forEach(function (form) {
          form.addEventListener('submit', function (event) {
            if (!form.checkValidity()) {
              event.preventDefault()
              event.stopPropagation()
            }

            form.classList.add('was-validated')
          }, false)
        })
    })()
</script>

